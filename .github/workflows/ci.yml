name: Packing BentoML

on:
  workflow_dispatch:
    inputs:
      hidden_units:
        description: "hidden units"
        required: true
      optimizer:
        description: "optimizer"
        required: true
      version:
        description: "experiment version"
        required: true
      # Tag Must be Already Updated

jobs:
  train-job:
    runs-on: ubuntu-latest

    env:
      GCS_BUCKET: "gs://kimnjang"
      VERSION: ${{ github.event.inputs.version }}
    steps:
      - uses: actions/checkout@v2

      - name: Find Suffix string
        run: |
          echo "SUFFIX=${VERSION//./}" >> $GITHUB_ENV
        env:
          VERSION: ${{ env.VERSION }}
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: "${{ github.repository_owner }}"
      - name: set hyper parameter
        run: |
          cd train/overlays/dev
          kustomize edit set namesuffix -- -${{ env.SUFFIX }}
          kustomize edit set image ghcr.io/${{ env.OWNER_LC }}/train-mnist:${{ env.VERSION }}
          echo $(jq '.[].value = ["--save_model_bucket_name", "${{env.GCS_BUCKET}}", "--optimizer", "${{ github.event.inputs.optimizer }}", "--hidden_units", "${{ github.event.inputs.hidden_units }}"]' train-job-patch.json) > train-job-patch.json
          git config --global user.name ${{ github.repository_owner }}
          git config --global user.email "jsuwan961205@gmail.com"
          git commit -am 'Publish new train job ${{ env.SUFFIX }}'
          git push || echo 'no changes'
  # gke-credential:
  #   runs-on: ubuntu-latest

  wait-training:
    needs: [train-job]
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.GKE_PROJECT }}
      GKE_CLUSTER: hackathon # Add your cluster name here.
      GKE_ZONE: us-central1-c # Add your cluster zone here.
      VERSION: ${{ github.event.inputs.version }}

    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Find Suffix string
        run: |
          echo "SUFFIX=${VERSION//./}" >> $GITHUB_ENV

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}
      - uses: int128/kustomize-action@v1
        id: kustomize
        with:
          kustomization: train/overlays/dev/kustomization.yaml

      - name: Sleep for 5 seconds
        run: sleep 5s

        shell: bash
      - name: Wait training job complete
        run: kubectl wait --for=condition=complete --timeout 24h -n deploy-test job/mnist-train-job-${{ env.SUFFIX }}

  bento-pack:
    needs: wait-training
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: instll dependency
        run: pip install tensorflow imageio bentoml pillow

      - name: Packing BentoML
        run: |
          echo ${{ github.event.inputs.model_path }}
          python bento/bento_packer.py --model_path "${{env.GCS_BUCKET}}/mnist/units_${{github.event.inputs.hidden_units}}_optimizer_${{github.event.inputs.optimizer}}.h5"
          echo "BENTO_SAVED_PATH=$(bentoml get MnistService:latest --print-location --quiet)" >> $GITHUB_ENV
          echo ${{ env.BENTO_SAVED_PATH }}

      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: "${{ github.repository_owner }}"

      - name: BentoML Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${{env.BENTO_SAVED_PATH}}
          file: ${{env.BENTO_SAVED_PATH}}/dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC}}/mnist_classifier_bento:${{github.event.inputs.version}}

      - name: set serving model tag
        run: |
          cd serve/overlays/dev
          kustomize edit set image ghcr.io/${{ env.OWNER_LC }}/mnist_classifier_bento:${{github.event.inputs.version}}
          git config --global user.name ${{ github.repository_owner }}
          git config --global user.email "jsuwan961205@gmail.com"
          git commit -am 'Update serving model tag ${{ env.SUFFIX }}'
          git push || echo 'no changes'
